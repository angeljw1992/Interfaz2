<?php
namespace App\Http\Controllers;
use SimpleXMLElement;
use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\DB;

class ExportXmlController extends Controller
{
    public function exportTableToXml(Request $request)
    {
        //Aquí se conecta a la DB y busca los valores
        $employees = DB::table('alta_empleados')->select('nombre_empleado', 'id_empleado', 'role')->get();
        //Aqui se crea la cabecera del XML
        $xml = new SimpleXMLElement('<ns0:empleados xmlns:ns0="http://www.arcosdorados.com/integrationservices/cdm"/>');

        //Aqui se le da formato al XML
        foreach ($employees as $employee) {
            $xmlElement = $xml->addChild("ns0:empleado");
            $xmlElement->addChild("ns0:employeeID", $employee->id_empleado);
            $xmlElement->addChild("ns0:employeeName", $employee->nombre_empleado);
            $xmlElement->addChild("ns0:securityLevel", $employee->role);
        }

        // Obtener la salida XML
        $output = $xml->asXML();

        // Eliminar la primera línea de la salida
        $output = preg_replace('/<\?xml.*\?>/', '', $output);

        // Agregar salto de línea al inicio y al final del contenido XML
        $output = PHP_EOL . $output . PHP_EOL;

        // Eliminar espacios en blanco al principio y al final del contenido XML
        $output = trim($output);

        // Establecer las cabeceras de la respuesta HTTP
        header('Content-type: application/xml');
        header('Content-Disposition: attachment; filename="employees.xml"');

        // Imprimir el contenido XML
        echo $output;
        exit;
    }
}
